/*
Author: your Efti Saroare
Course: CSCI-135
Instructor: Brandon Foster
Assignment: Dictionary using Arrays, Project Task A
*/
#include <string.h>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <sstream>
#include <string>

using namespace std;

//  global-variables
const int g_MAX_WORDS = 1000;
int g_word_count = 0;

string g_words[g_MAX_WORDS];        //string array of words [1000]
string g_definitions[g_MAX_WORDS];  //string array of definitions [1000]
string g_pos[g_MAX_WORDS];          //string array of part-of-speech (pos) [1000]

/*
    @param            :   The string with the `filename`
    @post             :   Reads the words, definitions
                          pos into the global-arrays
                          and set the value of `g_word_count`
                          to the number of words read
*/

void printDictionary()
{
    cout << "g_MAX_WORDS: " << g_MAX_WORDS << endl;
    cout << "\ng_word_count: " << g_word_count << endl;
    cout << "\ng_words: [";

    for (int i = 0; i <= g_word_count; ++i)
    {
        cout << "\"" << g_words[i] << "\"";
        if (i != g_word_count)
        {
            cout << ", ";
        }
    }
    cout << "]\n" << endl;

    cout << "g_pos: [";
    for (int i = 0; i <= g_word_count; ++i)
    {
        cout << "\"" << g_pos[i] << "\"";
        if (i != g_word_count)
        {
            cout << ", ";
        }
    }
    cout << "]\n" << endl;
    cout << "g_definitions: [";
    
    for (int i = 0; i <= g_word_count; ++i) 
    {
        cout << "\n     \""<< g_definitions[i] << "\"";
        if (i != g_word_count)
        {
            cout << ", ";
        }
    }
    cout << "]" << endl;
}

void readWords(string filename)
{
    ifstream file(filename);
    if (!file) {
        cout << "Failed to open file: " << filename << endl;
        return;
    }

    string line;
    getline(file, line);
    string word, pos, junk, definition;


    while (file >> word >> pos >> junk)
    {
        getline(file, definition);

        g_words[g_word_count] = word;
        g_pos[g_word_count] = pos;

        g_definitions[g_word_count] = definition;

        ++g_word_count;
    }
    printDictionary();
}



int main()
{
    readWords("TextFile1.txt");
    return 0;
}
