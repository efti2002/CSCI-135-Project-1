/*
Author: your Efti Saroare
Course: CSCI-135
Instructor: Brandon Foster
Assignment: Dictionary using Arrays, Project Task A
*/

#include <iostream>
#include <fstream>
#include <string>

using namespace std;

//  global-variables
const int g_MAX_WORDS = 1000;
int g_word_count = 0;

string g_words[g_MAX_WORDS];        //string array of words [1000]
string g_definitions[g_MAX_WORDS];  //string array of definitions [1000]
string g_pos[g_MAX_WORDS];          //string array of part-of-speech (pos) [1000]

/*
    @param            :   The string with the `filename`
    @post             :   Reads the words, definitions
                          pos into the global-arrays
                          and set the value of `g_word_count`
                          to the number of words read
*/



void readWords(string filename) {
    ifstream file(filename);

    if (file.is_open()) {
        string line;
        while (getline(file, line)) {
            size_t firstSpace = line.find(" ");
            if (firstSpace == string::npos) {
                // Skip invalid lines
                continue;
            }

            string word = line.substr(0, firstSpace);
            string posAndDef = line.substr(firstSpace + 1); // get pos:definition

            size_t colonPos = posAndDef.find(":");
            if (colonPos == string::npos) {
                // Skip invalid lines
                continue;
            }

            string pos = posAndDef.substr(0, colonPos - 1); // exclude trailing space
            string definition = posAndDef.substr(colonPos + 2); // skip ': ' before definition

            // Store in global arrays
            g_words[g_word_count] = word;
            g_pos[g_word_count] = pos;
            g_definitions[g_word_count] = definition;

            g_word_count++;
        }

        file.close();
    }
    else {
        cerr << "Could not open file: " << filename << endl;
    }
}

int main() {
    readWords("dictionary.txt");

    for (int i = 0; i < g_word_count; i++) {
        cout << "Word: " << g_words[i] << ", POS: " << g_pos[i] << ", Definition: " << g_definitions[i] << endl;
    }

    return 0;
}
